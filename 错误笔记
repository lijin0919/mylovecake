========================================================================================================================
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
1、在到数据库获取数据的时候，发生了时区无法匹配，异常如下：
（org.springframework.jdbc.CannotGetJdbcConnectionException:
Failed to obtain JDBC Connection; nested exception is java.sql.SQLException:
 The server time zone value '?й???????' is unrecognized or represents more than one time zone. You must configure either the server or JDBC driver (via the serverTimezone configuration property) to use a more specifc time zone value if you want to utilize time zone support.）
解决方法是在数据库Console中运行如下语句：
set global time_zone='+8:00';（将数据库时间设置为东八区，需要注意的是每次重启服务器都要先设置时区）
_______________________________________________________________________________________________________________________
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
2、在使用AJAX发送请求时注意解决跨域问题
解决办法是在使用注解
@CrossOrigin
_______________________________________________________________________________________________________________________
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
3、SpringMVC Ajax response中文返回乱码问题的解决方法
org.springframework.http.converter.StringHttpMessageConverter默认采用的ISO-8859-1编码，所以在返回中文时候显示乱码，
配置SpringMVC的配置文件添加如下配置：
    <mvc:annotation-driven >
        <mvc:message-converters>
            <bean class="org.springframework.http.converter.StringHttpMessageConverter">
                <property name="defaultCharset" value="UTF-8" />
            </bean>
        </mvc:message-converters>
    </mvc:annotation-driven>
_______________________________________________________________________________________________________________________
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
4,@Component解决Mapper无法注入
_______________________________________________________________________________________________________________________
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
5，在绑定的事件中;return false;可以解决发送ajax请求页面回到顶部的问题，如：
<a class="shop" href="#" onclick="addGoodToCart(${top.goods.goodId});return false;">加入购物车</a>
_______________________________________________________________________________________________________________________
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
6、用户Ajax发送请求，记得要在Mapping方法前加上 @ResponseBody
 /**
     * 验证用户名是否存在
     */
    @PostMapping("/checkUsername")
    @ResponseBody
    public String checkUsername(@RequestParam("username") String username){
        System.out.println(username);
_______________________________________________________________________________________________________________________
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
7、jQuery中提交按钮的灰色与恢复 (2013-02-19 18:08:35)转载▼
  1.按钮的id为btnzhuce
  ==》 控制按钮为禁用：
  $("#btnzhuce").attr({"disabled":"disabled"});
  ==》控制按钮为可用
  $("#btnzhuce").removeAttr("disabled");//将按钮可用
_______________________________________________________________________________________________________________________
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
8、My batis 模糊查询语句
@Select("SELECT * FROM goods WHERE name LIKE CONCAT('%',#{name},'%') ")
_______________________________________________________________________________________________________________________
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
9、在修改用户信息的时候，数据库的信息已经改变，还须将session中的用户信息也修改
_______________________________________________________________________________________________________________________
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
10、在Mapper层，我们所定义的方法，可以直接传一个对象进去，举例如下：
    /**
     * 修改用户信息：用户姓名、电话、地址
     * @param user
     * @return
     */
    @Update("UPDATE users set name=#{name},phone=#{userPhone},address=#{userAddress} WHERE id=#{id}")
    Integer updateUserInfo(Users user);
user对象中的属性可不止这四个，只要在传参的时候，让这些参数和对象的属性一一对应，My batis会帮我自动匹配。其他属性
没有赋值，并不会影响数据库中的数据。
_______________________________________________________________________________________________________________________
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
11、这样就可以隐藏一些我们需要的属性
 <input type="hidden" name="userId" value="${requestScope.user.id}">
_______________________________________________________________________________________________________________________
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
12、JQuery怎样返回前一页
<input type="button" name="back" value="重新填写" onclick="javascript:history.back(-1);"/>

history.back(-1):直接返回当前页的上一页，数据全部消息，是个新页面
history.go(-1):也是返回当前页的上一页，不过表单里的数据全部还在
_______________________________________________________________________________________________________________________
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
13、jQuery remove() 方法
   jQuery remove() 方法删除被选元素及其子元素。
   实例
   $("#div1").remove();
_______________________________________________________________________________________________________________________
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

14、log4j
<!-- https://mvnrepository.com/artifact/log4j/log4j -->
<dependency>
    <groupId>log4j</groupId>
    <artifactId>log4j</artifactId>
    <version>1.2.17</version>
</dependency>
<!-- https://mvnrepository.com/artifact/org.apache.logging.log4j/log4j-api -->
<dependency>
    <groupId>org.apache.logging.log4j</groupId>
    <artifactId>log4j-api</artifactId>
    <version>2.9.1</version>
</dependency>
<!-- https://mvnrepository.com/artifact/ch.qos.logback/logback-classic -->
<dependency>
    <groupId>ch.qos.logback</groupId>
    <artifactId>logback-classic</artifactId>
    <version>1.2.3</version>
    <scope>test</scope>
</dependency>
<!-- https://mvnrepository.com/artifact/ch.qos.logback/logback-core -->
<dependency>
    <groupId>ch.qos.logback</groupId>
    <artifactId>logback-core</artifactId>
    <version>1.2.3</version>
</dependency>
_______________________________________________________________________________________________________________________
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
15、给<a></a>标签绑定事件
<a id="delete-user-button" class="btn btn-danger" href="javascript:deleteUser(${user.id})">删除</a>
_______________________________________________________________________________________________________________________
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
16、java下Date跟timestamp相互转换
    Date()转timestamp：
            new Timestamp((new Date()).getTime());
    timestamp转Date()：
            Timestamp t = new Timestamp(System.currentTimeMillis());
            Date d = new Date(t.getTime());
